# Generated by Django 5.2.7 on 2025-10-30 11:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TaskLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "job_id",
                    models.CharField(
                        db_index=True,
                        help_text="Unique job identifier from ReArq",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "task_name",
                    models.CharField(
                        db_index=True, help_text="Name of the task function", max_length=200
                    ),
                ),
                (
                    "queue_name",
                    models.CharField(
                        db_index=True, help_text="Queue where task was executed", max_length=100
                    ),
                ),
                (
                    "args",
                    models.JSONField(default=list, help_text="Positional arguments passed to task"),
                ),
                (
                    "kwargs",
                    models.JSONField(default=dict, help_text="Keyword arguments passed to task"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("deferred", "Deferred"),
                            ("queued", "Queued"),
                            ("in_progress", "In Progress"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                            ("canceled", "Canceled"),
                        ],
                        db_index=True,
                        default="queued",
                        help_text="Current task status",
                        max_length=20,
                    ),
                ),
                (
                    "duration_ms",
                    models.IntegerField(
                        blank=True, help_text="Task execution duration in milliseconds", null=True
                    ),
                ),
                (
                    "job_retry",
                    models.IntegerField(
                        default=0,
                        help_text="Maximum number of retries allowed (from task definition)",
                    ),
                ),
                (
                    "job_retries",
                    models.IntegerField(default=0, help_text="Number of retries performed so far"),
                ),
                (
                    "job_retry_after",
                    models.IntegerField(default=60, help_text="Seconds to wait before retry"),
                ),
                (
                    "success",
                    models.BooleanField(
                        blank=True,
                        help_text="Whether task completed successfully (null = not finished)",
                        null=True,
                    ),
                ),
                (
                    "result",
                    models.TextField(blank=True, help_text="Task result (JSON string)", null=True),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if task failed", null=True
                    ),
                ),
                (
                    "worker_id",
                    models.CharField(
                        blank=True,
                        help_text="ID of worker that processed the task",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "enqueue_time",
                    models.DateTimeField(
                        db_index=True,
                        help_text="When job was enqueued to ReArq (from Job.enqueue_time)",
                    ),
                ),
                (
                    "expire_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="When job will expire (from Job.expire_time)",
                        null=True,
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="When task execution started (from JobResult.start_time)",
                        null=True,
                    ),
                ),
                (
                    "finish_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="When task execution finished (from JobResult.finish_time)",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When TaskLog record was created in Django DB"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When TaskLog record was last updated"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who triggered the task (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Task Log",
                "verbose_name_plural": "Task Logs",
                "db_table": "django_cfg_task_log",
                "ordering": ["-enqueue_time"],
                "indexes": [
                    models.Index(
                        fields=["task_name", "-enqueue_time"], name="django_cfg__task_na_e84031_idx"
                    ),
                    models.Index(
                        fields=["status", "-enqueue_time"], name="django_cfg__status_a59726_idx"
                    ),
                    models.Index(
                        fields=["queue_name", "status"], name="django_cfg__queue_n_b8a67b_idx"
                    ),
                    models.Index(
                        fields=["success", "-enqueue_time"], name="django_cfg__success_85e48e_idx"
                    ),
                    models.Index(fields=["-created_at"], name="django_cfg__created_4eea05_idx"),
                ],
            },
        ),
    ]
