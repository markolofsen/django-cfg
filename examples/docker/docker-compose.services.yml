# üê≥ Django-CFG Example - Core Services
# PostgreSQL Database, Redis, Django Application, and Dramatiq Workers

services:

  # --------------------------------------------------------------------------
  # PostgreSQL Database
  # --------------------------------------------------------------------------
  django_cfg_example_postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: django_cfg_example_postgres
    restart: unless-stopped
    # ports:
    #   - "5432:5432"  # SECURITY: Uncomment only for local development
    environment:
      POSTGRES_DB: django_cfg_example
      POSTGRES_USER: django_cfg_example
      POSTGRES_PASSWORD: django_cfg_example_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_cfg_example -d django_cfg_example"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - django_cfg_example_network

  # --------------------------------------------------------------------------
  # Redis Cache & Message Broker
  # --------------------------------------------------------------------------
  django_cfg_example_redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: django_cfg_example_redis
    restart: unless-stopped
    # ports:
    #   - "6379:6379"  # SECURITY: Uncomment only for local development
    volumes:
      - ./volumes/redis/data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - django_cfg_example_network

  # --------------------------------------------------------------------------
  # Django Application
  # --------------------------------------------------------------------------
  django_cfg_example_django:
    build:
      context: ../..
      dockerfile: django_cfg_example/docker/Dockerfile.django
      args:
        BUILD_DATE: ${BUILD_DATE:-}
        VERSION: ${VERSION:-1.0.0}
        VCS_REF: ${VCS_REF:-}
    container_name: django_cfg_example_django
    restart: unless-stopped
    ports:
      - "8000:8000"  # External access for demo
    environment:
      # Database
      DATABASE_URL: postgresql://django_cfg_example:django_cfg_example_password@django_cfg_example_postgres:5432/django_cfg_example

      # Redis
      REDIS_URL: redis://django_cfg_example_redis:6379/0
      REDIS_HOST: django_cfg_example_redis
      REDIS_PORT: 6379
      REDIS_DB: 0

      # Application
      LOG_LEVEL: INFO
      DJANGO_SETTINGS_MODULE: api.settings

      # Server settings
      PORT: 8000
    volumes:
      # Don't mount entire /app - it overwrites Poetry venv
      - ./volumes/django/logs:/app/logs
      - ./volumes/django/static:/app/static
      - ./volumes/django/media:/app/media
    depends_on:
      django_cfg_example_postgres:
        condition: service_healthy
      django_cfg_example_redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/cfg/status/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - django_cfg_example_network

  # --------------------------------------------------------------------------
  # Dramatiq Workers (Background Tasks)
  # --------------------------------------------------------------------------
  django_cfg_example_dramatiq:
    build:
      context: ../..
      dockerfile: django_cfg_example/docker/Dockerfile.django
      args:
        BUILD_DATE: ${BUILD_DATE:-}
        VERSION: ${VERSION:-1.0.0}
        VCS_REF: ${VCS_REF:-}
    container_name: django_cfg_example_dramatiq
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://django_cfg_example:django_cfg_example_password@django_cfg_example_postgres:5432/django_cfg_example

      # Redis (use DB 2 for Dramatiq)
      REDIS_URL: redis://django_cfg_example_redis:6379/2
      REDIS_HOST: django_cfg_example_redis
      REDIS_PORT: 6379
      REDIS_DB: 2

      # Application
      LOG_LEVEL: INFO
      DJANGO_SETTINGS_MODULE: api.settings

      # Dramatiq specific
      DRAMATIQ_PROCESSES: 2
      DRAMATIQ_THREADS: 4
    volumes:
      - ./volumes/django/logs:/app/logs
      - ./volumes/django/media:/app/media
    depends_on:
      django_cfg_example_postgres:
        condition: service_healthy
      django_cfg_example_redis:
        condition: service_healthy
    command: ["rundramatiq"]
    healthcheck:
      test: ["CMD", "ps", "aux"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - django_cfg_example_network

# --------------------------------------------------------------------------
# Networks
# --------------------------------------------------------------------------
networks:
  django_cfg_example_network:
    name: django_cfg_example_network
    driver: bridge
