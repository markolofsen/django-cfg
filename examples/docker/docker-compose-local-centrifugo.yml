# ═════════════════════════════════════════════════════════════════
# Django-CFG - Centrifugo Standalone Service with Redis
# ═════════════════════════════════════════════════════════════════
# Run Centrifugo + Redis for development/testing

name: djangocfg-centrifugo

services:
  # Redis for ACK tracking and caching
  redis:
    image: redis:7-alpine
    container_name: djangocfg_redis_centrifugo
    restart: unless-stopped
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --databases 3
    ports:
      - "7379:6379"  # Different port to avoid conflicts with main Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - centrifugo-network

  # Centrifugo WebSocket server
  centrifugo:
    image: centrifugo/centrifugo:v6
    container_name: djangocfg_centrifugo_standalone
    restart: unless-stopped
    entrypoint: ["/docker-entrypoint.sh"]
    env_file:
      - .env.local
    volumes:
      - ./services/centrifugo/docker-entrypoint.sh:/docker-entrypoint.sh:ro
      - ./services/centrifugo/config.json:/centrifugo/config.template.json:ro
    ports:
      - "7320:8000"  # Centrifugo (Django-CFG: base 7300 +20)
    networks:
      - centrifugo-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          memory: 128M

networks:
  centrifugo-network:
    driver: bridge
