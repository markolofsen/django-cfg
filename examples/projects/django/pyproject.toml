[tool.poetry]
name = "django-cfg-sample"
version = "1.0.0"
description = "Complete Django CFG sample project demonstrating all features"
authors = ["Django CFG Team"]
readme = "README.md"
packages = [{include = "apps"}, {include = "api"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.14"
# Django framework (required by django-cfg)
django = "^5.2.0"
# django-cfg from PyPI
django-cfg = "*"
# pydantic-ai is pulled by django-cfg automatically

# Image handling for user avatars and product images
Pillow = "^10.0.0"
# System monitoring for health checks
psutil = "^5.9.0"
# Enhanced CLI with Click
click = "^8.1.0"
faker = "^37.5.3"
django-admin-rangefilter = "^0.13.3"
markdown = "^3.9"

[tool.poetry.group.local]
optional = true

[tool.poetry.group.local.dependencies]
# Local development dependencies (path configured via Makefile)
django-cfg = {path = "/Users/markinmatrix/djangocfg", develop = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-django = "^4.5.2"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "apps,config"
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
