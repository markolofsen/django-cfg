# Generated by Django 5.2.7 on 2025-10-13 05:31

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Exchange name', max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('code', models.CharField(help_text='Exchange code (e.g., BINANCE, COINBASE)', max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('volume_24h_usd', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='24h trading volume', max_digits=20)),
                ('num_markets', models.PositiveIntegerField(default=0, help_text='Number of trading pairs')),
                ('num_coins', models.PositiveIntegerField(default=0, help_text='Number of supported coins')),
                ('maker_fee_percent', models.DecimalField(decimal_places=4, default=Decimal('0.1'), max_digits=5)),
                ('taker_fee_percent', models.DecimalField(decimal_places=4, default=Decimal('0.1'), max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('supports_api', models.BooleanField(default=True)),
                ('rank', models.PositiveIntegerField(default=0, help_text='Exchange rank by volume')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Exchange',
                'verbose_name_plural': 'Exchanges',
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(help_text='Coin symbol (e.g., BTC, ETH)', max_length=10, unique=True)),
                ('name', models.CharField(help_text='Full name (e.g., Bitcoin, Ethereum)', max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('current_price_usd', models.DecimalField(decimal_places=8, default=Decimal('0'), help_text='Current price in USD', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('market_cap_usd', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Market capitalization', max_digits=20)),
                ('volume_24h_usd', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='24h trading volume', max_digits=20)),
                ('price_change_24h_percent', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('price_change_7d_percent', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('price_change_30d_percent', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('logo_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('whitepaper_url', models.URLField(blank=True)),
                ('rank', models.PositiveIntegerField(default=0, help_text='Market cap rank')),
                ('is_active', models.BooleanField(default=True)),
                ('is_tradeable', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Coin',
                'verbose_name_plural': 'Coins',
                'ordering': ['rank', 'symbol'],
                'indexes': [models.Index(fields=['symbol'], name='crypto_coin_symbol_8782ba_idx'), models.Index(fields=['rank'], name='crypto_coin_rank_c4975d_idx'), models.Index(fields=['is_active', 'is_tradeable'], name='crypto_coin_is_acti_921b7f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=8, default=Decimal('0'), help_text='Available balance', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('locked_balance', models.DecimalField(decimal_places=8, default=Decimal('0'), help_text='Locked balance (in orders)', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('address', models.CharField(blank=True, help_text='Deposit address', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to='crypto.coin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
                'ordering': ['-balance'],
                'unique_together': {('user', 'coin')},
            },
        ),
    ]
