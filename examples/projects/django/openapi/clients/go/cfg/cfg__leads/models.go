// Code generated by django-cfg/django_client - DO NOT EDIT.
// Generated at: 2025-10-27T19:13:24.697143

package cfg__leads

import (
	"cfg/types"
)

// Serializer for lead form submission from frontend.
type LeadSubmission struct {
	Name string `json:"name"`
	Email string `json:"email"`
	Company *string `json:"company,omitempty"`
	CompanySite *string `json:"company_site,omitempty"`
	// * `email` - Email
	// * `whatsapp` - WhatsApp
	// * `telegram` - Telegram
	// * `phone` - Phone
	// * `other` - Other
	ContactType *types.LeadsubmissionContactType `json:"contact_type,omitempty"`
	ContactValue *string `json:"contact_value,omitempty"`
	Subject *string `json:"subject,omitempty"`
	Message string `json:"message"`
	Extra *string `json:"extra,omitempty"`
	// Frontend URL where form was submitted
	SiteURL string `json:"site_url"`
}

// Serializer for lead form submission from frontend.
type LeadSubmissionRequest struct {
	Name string `json:"name"`
	Email string `json:"email"`
	Company *string `json:"company,omitempty"`
	CompanySite *string `json:"company_site,omitempty"`
	// * `email` - Email
	// * `whatsapp` - WhatsApp
	// * `telegram` - Telegram
	// * `phone` - Phone
	// * `other` - Other
	ContactType *types.LeadsubmissionrequestContactType `json:"contact_type,omitempty"`
	ContactValue *string `json:"contact_value,omitempty"`
	Subject *string `json:"subject,omitempty"`
	Message string `json:"message"`
	Extra *string `json:"extra,omitempty"`
	// Frontend URL where form was submitted
	SiteURL string `json:"site_url"`
}

// PaginatedLeadSubmissionList model.
type PaginatedLeadSubmissionList struct {
	// Total number of items across all pages
	Count int64 `json:"count"`
	// Current page number (1-based)
	Page int64 `json:"page"`
	// Total number of pages
	Pages int64 `json:"pages"`
	// Number of items per page
	PageSize int64 `json:"page_size"`
	// Whether there is a next page
	HasNext bool `json:"has_next"`
	// Whether there is a previous page
	HasPrevious bool `json:"has_previous"`
	// Next page number (null if no next page)
	NextPage *int64 `json:"next_page,omitempty"`
	// Previous page number (null if no previous page)
	PreviousPage *int64 `json:"previous_page,omitempty"`
	// Array of items for current page
	Results []LeadSubmission `json:"results"`
}

// Serializer for lead form submission from frontend.
type PatchedLeadSubmissionRequest struct {
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	Company *string `json:"company,omitempty"`
	CompanySite *string `json:"company_site,omitempty"`
	// * `email` - Email
	// * `whatsapp` - WhatsApp
	// * `telegram` - Telegram
	// * `phone` - Phone
	// * `other` - Other
	ContactType *types.PatchedleadsubmissionrequestContactType `json:"contact_type,omitempty"`
	ContactValue *string `json:"contact_value,omitempty"`
	Subject *string `json:"subject,omitempty"`
	Message *string `json:"message,omitempty"`
	Extra *string `json:"extra,omitempty"`
	// Frontend URL where form was submitted
	SiteURL *string `json:"site_url,omitempty"`
}

