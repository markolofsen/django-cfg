// Code generated by django-cfg/django_client - DO NOT EDIT.
// Generated at: 2025-10-27T19:13:24.687673

package cfg__newsletter__subscriptions

import (
	"time"
)

// Generic error response.
type ErrorResponse struct {
	Success *bool `json:"success,omitempty"`
	Message string `json:"message"`
}

// Serializer for NewsletterSubscription model.
type NewsletterSubscription struct {
	ID int64 `json:"id"`
	Newsletter int64 `json:"newsletter"`
	NewsletterTitle string `json:"newsletter_title"`
	User *int64 `json:"user,omitempty"`
	UserEmail string `json:"user_email"`
	Email string `json:"email"`
	IsActive *bool `json:"is_active,omitempty"`
	SubscribedAt time.Time `json:"subscribed_at"`
	UnsubscribedAt time.Time `json:"unsubscribed_at"`
}

// PaginatedNewsletterSubscriptionList model.
type PaginatedNewsletterSubscriptionList struct {
	// Total number of items across all pages
	Count int64 `json:"count"`
	// Current page number (1-based)
	Page int64 `json:"page"`
	// Total number of pages
	Pages int64 `json:"pages"`
	// Number of items per page
	PageSize int64 `json:"page_size"`
	// Whether there is a next page
	HasNext bool `json:"has_next"`
	// Whether there is a previous page
	HasPrevious bool `json:"has_previous"`
	// Next page number (null if no next page)
	NextPage *int64 `json:"next_page,omitempty"`
	// Previous page number (null if no previous page)
	PreviousPage *int64 `json:"previous_page,omitempty"`
	// Array of items for current page
	Results []NewsletterSubscription `json:"results"`
}

// Simple serializer for newsletter subscription.
type SubscribeRequest struct {
	NewsletterID int64 `json:"newsletter_id"`
	Email string `json:"email"`
}

// Response for subscription.
type SubscribeResponse struct {
	Success bool `json:"success"`
	Message string `json:"message"`
	SubscriptionID *int64 `json:"subscription_id,omitempty"`
}

// Generic success response.
type SuccessResponse struct {
	Success bool `json:"success"`
	Message string `json:"message"`
}

// Simple serializer for unsubscribe.
type UnsubscribeRequest struct {
	SubscriptionID int64 `json:"subscription_id"`
}

