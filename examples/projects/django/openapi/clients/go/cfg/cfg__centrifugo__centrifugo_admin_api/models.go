// Code generated by django-cfg/django_client - DO NOT EDIT.
// Generated at: 2025-10-27T19:13:24.682545

package cfg__centrifugo__centrifugo_admin_api


// Request to list active channels.
type CentrifugoChannelsRequestRequest struct {
	// Pattern to filter channels (e.g., 'user:*')
	Pattern *string `json:"pattern,omitempty"`
}

// List of active channels response.
type CentrifugoChannelsResponse struct {
	Error *CentrifugoError `json:"error,omitempty"`
	Result *CentrifugoChannelsResult `json:"result,omitempty"`
}

// Channels result wrapper.
type CentrifugoChannelsResult struct {
	// Map of channel names to channel info
	Channels map[string]interface{} `json:"channels"`
}

// Information about connected client.
type CentrifugoClientInfo struct {
	// User ID
	User string `json:"user"`
	// Client UUID
	Client string `json:"client"`
	// Connection metadata
	ConnInfo *string `json:"conn_info,omitempty"`
	// Channel-specific metadata
	ChanInfo *string `json:"chan_info,omitempty"`
}

// Centrifugo API error structure.
type CentrifugoError struct {
	// Error code (0 = no error)
	Code *int64 `json:"code,omitempty"`
	// Error message
	Message *string `json:"message,omitempty"`
}

// Request to get channel history.
type CentrifugoHistoryRequestRequest struct {
	// Channel name
	Channel string `json:"channel"`
	// Maximum number of messages to return
	Limit *string `json:"limit,omitempty"`
	Since *CentrifugoStreamPosition `json:"since,omitempty"`
	// Reverse message order (newest first)
	Reverse *string `json:"reverse,omitempty"`
}

// Channel history response.
type CentrifugoHistoryResponse struct {
	Error *CentrifugoError `json:"error,omitempty"`
	Result *CentrifugoHistoryResult `json:"result,omitempty"`
}

// History result wrapper.
type CentrifugoHistoryResult struct {
	// List of publications
	Publications []CentrifugoPublication `json:"publications"`
	// Current stream epoch
	Epoch string `json:"epoch"`
	// Latest stream offset
	Offset int64 `json:"offset"`
}

// Server info response.
type CentrifugoInfoResponse struct {
	Error *CentrifugoError `json:"error,omitempty"`
	Result *CentrifugoInfoResult `json:"result,omitempty"`
}

// Info result wrapper.
type CentrifugoInfoResult struct {
	// List of Centrifugo nodes
	Nodes []CentrifugoNodeInfo `json:"nodes"`
}

// Server metrics.
type CentrifugoMetrics struct {
	// Metrics collection interval
	Interval float64 `json:"interval"`
	// Metric name to value mapping
	Items map[string]interface{} `json:"items"`
}

// Information about a single Centrifugo node.
type CentrifugoNodeInfo struct {
	// Unique node identifier
	UID string `json:"uid"`
	// Node name
	Name string `json:"name"`
	// Centrifugo version
	Version string `json:"version"`
	// Number of connected clients
	NumClients int64 `json:"num_clients"`
	// Number of unique users
	NumUsers int64 `json:"num_users"`
	// Number of active channels
	NumChannels int64 `json:"num_channels"`
	// Node uptime in seconds
	Uptime int64 `json:"uptime"`
	// Total number of subscriptions
	NumSubs int64 `json:"num_subs"`
	Metrics *CentrifugoMetrics `json:"metrics,omitempty"`
	Process *CentrifugoProcess `json:"process,omitempty"`
}

// Request to get channel presence.
type CentrifugoPresenceRequestRequest struct {
	// Channel name
	Channel string `json:"channel"`
}

// Channel presence response.
type CentrifugoPresenceResponse struct {
	Error *CentrifugoError `json:"error,omitempty"`
	Result *CentrifugoPresenceResult `json:"result,omitempty"`
}

// Presence result wrapper.
type CentrifugoPresenceResult struct {
	// Map of client IDs to client info
	Presence map[string]interface{} `json:"presence"`
}

// Request to get channel presence statistics.
type CentrifugoPresenceStatsRequestRequest struct {
	// Channel name
	Channel string `json:"channel"`
}

// Channel presence stats response.
type CentrifugoPresenceStatsResponse struct {
	Error *CentrifugoError `json:"error,omitempty"`
	Result *CentrifugoPresenceStatsResult `json:"result,omitempty"`
}

// Presence stats result.
type CentrifugoPresenceStatsResult struct {
	// Number of connected clients
	NumClients int64 `json:"num_clients"`
	// Number of unique users
	NumUsers int64 `json:"num_users"`
}

// Process information.
type CentrifugoProcess struct {
	// CPU usage percentage
	Cpu float64 `json:"cpu"`
	// Resident set size in bytes
	Rss int64 `json:"rss"`
}

// Single publication (message) in channel history.
type CentrifugoPublication struct {
	// Message payload
	Data map[string]interface{} `json:"data"`
	Info *CentrifugoClientInfo `json:"info,omitempty"`
	// Message offset in channel stream
	Offset int64 `json:"offset"`
	// Optional message tags
	Tags *string `json:"tags,omitempty"`
}

// Stream position for pagination.
type CentrifugoStreamPosition struct {
	// Stream offset
	Offset int64 `json:"offset"`
	// Stream epoch
	Epoch string `json:"epoch"`
}

