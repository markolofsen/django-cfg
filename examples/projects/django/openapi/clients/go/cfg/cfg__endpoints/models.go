// Code generated by django-cfg/django_client - DO NOT EDIT.
// Generated at: 2025-10-28T07:47:34.515045

package cfg__endpoints

import (
	"time"
)

// Serializer for single endpoint status.
type Endpoint struct {
	// Resolved URL (for parametrized URLs) or URL pattern
	URL string `json:"url"`
	// Original URL pattern (for parametrized URLs)
	URLPattern *string `json:"url_pattern,omitempty"`
	// Django URL name (if available)
	URLName *string `json:"url_name,omitempty"`
	// URL namespace
	Namespace *string `json:"namespace,omitempty"`
	// URL group (up to 3 depth)
	Group string `json:"group"`
	// View function/class name
	View *string `json:"view,omitempty"`
	// Status: healthy, unhealthy, warning, error, skipped, pending
	Status string `json:"status"`
	// HTTP status code
	StatusCode *int64 `json:"status_code,omitempty"`
	// Response time in milliseconds
	ResponseTimeMs *float64 `json:"response_time_ms,omitempty"`
	// Whether endpoint is healthy
	IsHealthy *bool `json:"is_healthy,omitempty"`
	// Error message if check failed
	Error *string `json:"error,omitempty"`
	// Error type: database, general, etc.
	ErrorType *string `json:"error_type,omitempty"`
	// Reason for warning/skip
	Reason *string `json:"reason,omitempty"`
	// Timestamp of last check
	LastChecked *time.Time `json:"last_checked,omitempty"`
	// Whether URL has parameters that were resolved with test values
	HasParameters *bool `json:"has_parameters,omitempty"`
	// Whether endpoint required JWT authentication
	RequiredAuth *bool `json:"required_auth,omitempty"`
	// Whether endpoint returned 429 (rate limited)
	RateLimited *bool `json:"rate_limited,omitempty"`
}

// Serializer for overall endpoints status response.
type EndpointsStatus struct {
	// Overall status: healthy, degraded, or unhealthy
	Status string `json:"status"`
	// Timestamp of the check
	Timestamp time.Time `json:"timestamp"`
	// Total number of endpoints checked
	TotalEndpoints int64 `json:"total_endpoints"`
	// Number of healthy endpoints
	Healthy int64 `json:"healthy"`
	// Number of unhealthy endpoints
	Unhealthy int64 `json:"unhealthy"`
	// Number of endpoints with warnings
	Warnings int64 `json:"warnings"`
	// Number of endpoints with errors
	Errors int64 `json:"errors"`
	// Number of skipped endpoints
	Skipped int64 `json:"skipped"`
	// List of all endpoints with their status
	Endpoints []Endpoint `json:"endpoints"`
}

// Serializer for single URL pattern.
type URLPattern struct {
	// URL pattern (e.g., ^api/users/(?P<pk>[^/.]+)/$)
	Pattern string `json:"pattern"`
	// URL name (if defined)
	Name *string `json:"name,omitempty"`
	// Full URL name with namespace (e.g., admin:index)
	FullName *string `json:"full_name,omitempty"`
	// URL namespace
	Namespace *string `json:"namespace,omitempty"`
	// View function/class name
	View *string `json:"view,omitempty"`
	// View class name (for CBV/ViewSets)
	ViewClass *string `json:"view_class,omitempty"`
	// Allowed HTTP methods
	Methods []string `json:"methods,omitempty"`
	// View module path
	Module *string `json:"module,omitempty"`
}

// Serializer for URLs list response.
type URLsList struct {
	// Status: success or error
	Status string `json:"status"`
	// Service name
	Service string `json:"service"`
	// Django-CFG version
	Version string `json:"version"`
	// Base URL of the service
	BaseURL string `json:"base_url"`
	// Total number of registered URLs
	TotalUrls int64 `json:"total_urls"`
	// List of all registered URL patterns
	Urls []URLPattern `json:"urls"`
}

