// api__crypto/service.proto
// Generated by django-cfg django_client module
// DO NOT EDIT - This file is auto-generated

syntax = "proto3";

package crypto.v1.crypto;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "api__crypto/messages.proto";


message CryptoCoinsListRequest {
  optional int64 page = 1;
  optional int64 page_size = 2;
}
message CryptoCoinsListResponse {
  Paginatedcoinlistlist data = 1;
}
message CryptoCoinsRetrieveRequest {
  int64 id = 1;
}
message CryptoCoinsRetrieveResponse {
  Coin data = 1;
}
message CryptoCoinsStatsRetrieveResponse {
  Coinstats data = 1;
}
message CryptoExchangesListRequest {
  optional int64 page = 1;
  optional int64 page_size = 2;
}
message CryptoExchangesListResponse {
  Paginatedexchangelist data = 1;
}
message CryptoExchangesRetrieveRequest {
  string slug = 1;
}
message CryptoExchangesRetrieveResponse {
  Exchange data = 1;
}
message CryptoWalletsListRequest {
  optional int64 page = 1;
  optional int64 page_size = 2;
}
message CryptoWalletsListResponse {
  Paginatedwalletlist data = 1;
}
message CryptoWalletsRetrieveRequest {
  string id = 1;
}
message CryptoWalletsRetrieveResponse {
  Wallet data = 1;
}

service CryptoService {
  // ViewSet for cryptocurrency coins.
  rpc CryptoCoinsList(CryptoCoinsListRequest) returns (CryptoCoinsListResponse);
  // ViewSet for cryptocurrency coins.
  rpc CryptoCoinsRetrieve(CryptoCoinsRetrieveRequest) returns (CryptoCoinsRetrieveResponse);
  // Get cryptocurrency statistics.
  rpc CryptoCoinsStatsRetrieve(google.protobuf.Empty) returns (CryptoCoinsStatsRetrieveResponse);
  // ViewSet for cryptocurrency exchanges.
  rpc CryptoExchangesList(CryptoExchangesListRequest) returns (CryptoExchangesListResponse);
  // ViewSet for cryptocurrency exchanges.
  rpc CryptoExchangesRetrieve(CryptoExchangesRetrieveRequest) returns (CryptoExchangesRetrieveResponse);
  // ViewSet for user wallets.
  rpc CryptoWalletsList(CryptoWalletsListRequest) returns (CryptoWalletsListResponse);
  // ViewSet for user wallets.
  rpc CryptoWalletsRetrieve(CryptoWalletsRetrieveRequest) returns (CryptoWalletsRetrieveResponse);
}