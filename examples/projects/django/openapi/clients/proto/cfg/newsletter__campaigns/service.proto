// newsletter__campaigns/service.proto
// Generated by django-cfg django_client module
// DO NOT EDIT - This file is auto-generated

syntax = "proto3";

package cfg.v1.campaigns;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "newsletter__campaigns/messages.proto";


message CfgNewsletterCampaignsListRequest {
  optional int64 page = 1;
  optional int64 page_size = 2;
}
message CfgNewsletterCampaignsListResponse {
  Paginatednewslettercampaignlist data = 1;
}
message CfgNewsletterCampaignsCreateRequest {
  Newslettercampaignrequest body = 1;
}
message CfgNewsletterCampaignsCreateResponse {
  Newslettercampaign data = 1;
}
message CfgNewsletterCampaignsRetrieveRequest {
  int64 id = 1;
}
message CfgNewsletterCampaignsRetrieveResponse {
  Newslettercampaign data = 1;
}
message CfgNewsletterCampaignsUpdateRequest {
  int64 id = 1;
  Newslettercampaignrequest body = 2;
}
message CfgNewsletterCampaignsUpdateResponse {
  Newslettercampaign data = 1;
}
message CfgNewsletterCampaignsDestroyRequest {
  int64 id = 1;
}
message CfgNewsletterCampaignsSendCreateRequest {
  Sendcampaignrequest body = 1;
}
message CfgNewsletterCampaignsSendCreateResponse {
  Sendcampaignresponse data = 1;
}

service CampaignsService {
  // Get a list of all newsletter campaigns.
  rpc CfgNewsletterCampaignsList(CfgNewsletterCampaignsListRequest) returns (CfgNewsletterCampaignsListResponse);
  // Create a new newsletter campaign.
  rpc CfgNewsletterCampaignsCreate(CfgNewsletterCampaignsCreateRequest) returns (CfgNewsletterCampaignsCreateResponse);
  // Retrieve details of a specific newsletter campaign.
  rpc CfgNewsletterCampaignsRetrieve(CfgNewsletterCampaignsRetrieveRequest) returns (CfgNewsletterCampaignsRetrieveResponse);
  // Update a newsletter campaign.
  rpc CfgNewsletterCampaignsUpdate(CfgNewsletterCampaignsUpdateRequest) returns (CfgNewsletterCampaignsUpdateResponse);
  // Delete a newsletter campaign.
  rpc CfgNewsletterCampaignsDestroy(CfgNewsletterCampaignsDestroyRequest) returns (google.protobuf.Empty);
  // Send a newsletter campaign to all subscribers.
  rpc CfgNewsletterCampaignsSendCreate(CfgNewsletterCampaignsSendCreateRequest) returns (CfgNewsletterCampaignsSendCreateResponse);
}