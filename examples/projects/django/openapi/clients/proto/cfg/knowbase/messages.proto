// knowbase/messages.proto
// Generated by django-cfg django_client module
// DO NOT EDIT - This file is auto-generated

syntax = "proto3";

package cfg.v1.knowbase;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


message Resultsitem {
}

message Paginatedchatresponselist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Sourcesitem {
}

message Chatresponse {

  string message_id = 1;
  string content = 2;
  int64 tokens_used = 3;
  double cost_usd = 4;
  int64 processing_time_ms = 5;
  string model_used = 6;
  repeated Sourcesitem sources = 7;
}

message Chatsource {

  string document_title = 1;
  string chunk_content = 2;
  double similarity = 3;
}

message Chatresponserequest {

  string message_id = 1;
  string content = 2;
  int64 tokens_used = 3;
  double cost_usd = 4;
  int64 processing_time_ms = 5;
  string model_used = 6;
  repeated Sourcesitem sources = 7;
}

message Chatsourcerequest {

  string document_title = 1;
  string chunk_content = 2;
  double similarity = 3;
}

message Patchedchatresponserequest {

  optional string message_id = 1;
  optional string content = 2;
  optional int64 tokens_used = 3;
  optional double cost_usd = 4;
  optional int64 processing_time_ms = 5;
  optional string model_used = 6;
  repeated Sourcesitem sources = 7;
}

message Messagesitem {
}

message Chathistory {

  string session_id = 1;
  repeated Messagesitem messages = 2;
  int64 total_messages = 3;
}

message Chatmessage {

    enum Role {
      ROLE_UNKNOWN = 0;
      ROLE_USER = 1;
      ROLE_ASSISTANT = 2;
      ROLE_SYSTEM = 3;
    }

  string id = 1;
  Role role = 2;
  string content = 3;
  optional int64 tokens_used = 4;
  double cost_usd = 5;
  optional int64 processing_time_ms = 6;
  google.protobuf.Timestamp created_at = 7;
  optional string context_chunks = 8;
}

message Chatqueryrequest {

  optional string session_id = 1;
  string query = 2;
  optional int64 max_tokens = 3;
  optional bool include_sources = 4;
}

message Paginateddocumentlist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Document {

  string id = 1;
  string title = 2;
  optional string file_type = 3;
  optional int64 file_size = 4;
  string processing_status = 5;
  int64 chunks_count = 6;
  int64 total_tokens = 7;
  double total_cost_usd = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  google.protobuf.Timestamp processing_started_at = 11;
  google.protobuf.Timestamp processing_completed_at = 12;
  string processing_error = 13;
  optional string metadata = 14;
}

message Documentcreaterequest {

  string title = 1;
  string content = 2;
  optional string file_type = 3;
  optional string metadata = 4;
}

message Documentrequest {

  string title = 1;
  optional string file_type = 2;
  optional int64 file_size = 3;
  optional string metadata = 4;
}

message Patcheddocumentrequest {

  optional string title = 1;
  optional string file_type = 2;
  optional int64 file_size = 3;
  optional string metadata = 4;
}

message Documentprocessingstatus {

  string id = 1;
  string status = 2;
  string progress = 3;
  optional string error = 4;
  optional double processing_time_seconds = 5;
}

message Documentstats {

  int64 total_documents = 1;
  int64 completed_documents = 2;
  double processing_success_rate = 3;
  int64 total_chunks = 4;
  int64 total_tokens = 5;
  double total_cost_usd = 6;
  double avg_processing_time_seconds = 7;
}

message Paginatedchatsessionlist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Chatsession {

  string id = 1;
  optional string title = 2;
  optional bool is_active = 3;
  optional int64 messages_count = 4;
  optional int64 total_tokens_used = 5;
  double total_cost_usd = 6;
  optional string model_name = 7;
  optional double temperature = 8;
  optional int64 max_context_chunks = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message Chatsessioncreaterequest {

  optional string title = 1;
  optional string model_name = 2;
  optional double temperature = 3;
  optional int64 max_context_chunks = 4;
}

message Chatsessionrequest {

  optional string title = 1;
  optional bool is_active = 2;
  optional int64 messages_count = 3;
  optional int64 total_tokens_used = 4;
  optional string model_name = 5;
  optional double temperature = 6;
  optional int64 max_context_chunks = 7;
}

message Patchedchatsessionrequest {

  optional string title = 1;
  optional bool is_active = 2;
  optional int64 messages_count = 3;
  optional int64 total_tokens_used = 4;
  optional string model_name = 5;
  optional double temperature = 6;
  optional int64 max_context_chunks = 7;
}

message Paginatedpubliccategorylist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Publiccategory {

  string id = 1;
  string name = 2;
  optional string description = 3;
}

message Paginatedpublicdocumentlistlist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Category {
}

message Publicdocumentlist {

  message Category {
  }

  string id = 1;
  string title = 2;
  Category category = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

message Publicdocument {

  string id = 1;
  string title = 2;
  string content = 3;
  Category category = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message Paginateddocumentarchivelistlist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Categoriesitem {
}

message Documentarchivelist {

    enum ArchiveType {
      ARCHIVETYPE_UNKNOWN = 0;
      ARCHIVETYPE_ZIP = 1;
      ARCHIVETYPE_TAR = 2;
      ARCHIVETYPE_TAR_GZ = 3;
      ARCHIVETYPE_TAR_BZ2 = 4;
    }

    enum ProcessingStatus {
      PROCESSINGSTATUS_UNKNOWN = 0;
      PROCESSINGSTATUS_PENDING = 1;
      PROCESSINGSTATUS_PROCESSING = 2;
      PROCESSINGSTATUS_COMPLETED = 3;
      PROCESSINGSTATUS_FAILED = 4;
      PROCESSINGSTATUS_CANCELLED = 5;
    }

  string id = 1;
  string title = 2;
  string description = 3;
  repeated Categoriesitem categories = 4;
  bool is_public = 5;
  string original_filename = 6;
  int64 file_size = 7;
  ArchiveType archive_type = 8;
  ProcessingStatus processing_status = 9;
  optional google.protobuf.Timestamp processed_at = 10;
  int64 total_items = 11;
  int64 total_chunks = 12;
  double total_cost_usd = 13;
  double processing_progress = 14;
  google.protobuf.Timestamp created_at = 15;
}

message Documentcategory {

  string id = 1;
  string name = 2;
  optional string description = 3;
  optional bool is_public = 4;
  google.protobuf.Timestamp created_at = 5;
}

message Archiveprocessingresult {

  string archive_id = 1;
  string status = 2;
  int64 processing_time_ms = 3;
  int64 items_processed = 4;
  int64 chunks_created = 5;
  int64 vectorized_chunks = 6;
  double total_cost_usd = 7;
  string error_message = 8;
}

message FileTree {
}

message Itemsitem {
}

message Documentarchivedetail {

    enum ArchiveType {
      ARCHIVETYPE_UNKNOWN = 0;
      ARCHIVETYPE_ZIP = 1;
      ARCHIVETYPE_TAR = 2;
      ARCHIVETYPE_TAR_GZ = 3;
      ARCHIVETYPE_TAR_BZ2 = 4;
    }

    enum ProcessingStatus {
      PROCESSINGSTATUS_UNKNOWN = 0;
      PROCESSINGSTATUS_PENDING = 1;
      PROCESSINGSTATUS_PROCESSING = 2;
      PROCESSINGSTATUS_COMPLETED = 3;
      PROCESSINGSTATUS_FAILED = 4;
      PROCESSINGSTATUS_CANCELLED = 5;
    }

  message FileTree {
  }

  string id = 1;
  string title = 2;
  optional string description = 3;
  repeated Categoriesitem categories = 4;
  optional bool is_public = 5;
  string archive_file = 6;
  string original_filename = 7;
  int64 file_size = 8;
  ArchiveType archive_type = 9;
  ProcessingStatus processing_status = 10;
  optional google.protobuf.Timestamp processed_at = 11;
  int64 processing_duration_ms = 12;
  string processing_error = 13;
  int64 total_items = 14;
  int64 processed_items = 15;
  int64 total_chunks = 16;
  int64 vectorized_chunks = 17;
  int64 total_tokens = 18;
  double total_cost_usd = 19;
  double processing_progress = 20;
  double vectorization_progress = 21;
  bool is_processed = 22;
  google.protobuf.Timestamp created_at = 23;
  google.protobuf.Timestamp updated_at = 24;
  repeated Itemsitem items = 25;
  FileTree file_tree = 26;
  optional string metadata = 27;
}

message Archiveitem {

    enum ContentType {
      CONTENTTYPE_DOCUMENT = 0;
      CONTENTTYPE_CODE = 1;
      CONTENTTYPE_IMAGE = 2;
      CONTENTTYPE_DATA = 3;
      CONTENTTYPE_ARCHIVE = 4;
      CONTENTTYPE_UNKNOWN = 5;
    }

  string id = 1;
  string relative_path = 2;
  string item_name = 3;
  string item_type = 4;
  ContentType content_type = 5;
  optional int64 file_size = 6;
  bool is_processable = 7;
  string language = 8;
  string encoding = 9;
  int64 chunks_count = 10;
  int64 total_tokens = 11;
  double processing_cost = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
}

message Documentarchiverequest {

  string title = 1;
  optional string description = 2;
  optional bool is_public = 3;
}

message Documentarchive {

    enum ArchiveType {
      ARCHIVETYPE_UNKNOWN = 0;
      ARCHIVETYPE_ZIP = 1;
      ARCHIVETYPE_TAR = 2;
      ARCHIVETYPE_TAR_GZ = 3;
      ARCHIVETYPE_TAR_BZ2 = 4;
    }

    enum ProcessingStatus {
      PROCESSINGSTATUS_UNKNOWN = 0;
      PROCESSINGSTATUS_PENDING = 1;
      PROCESSINGSTATUS_PROCESSING = 2;
      PROCESSINGSTATUS_COMPLETED = 3;
      PROCESSINGSTATUS_FAILED = 4;
      PROCESSINGSTATUS_CANCELLED = 5;
    }

  string id = 1;
  string title = 2;
  optional string description = 3;
  repeated Categoriesitem categories = 4;
  optional bool is_public = 5;
  string archive_file = 6;
  string original_filename = 7;
  int64 file_size = 8;
  ArchiveType archive_type = 9;
  ProcessingStatus processing_status = 10;
  optional google.protobuf.Timestamp processed_at = 11;
  int64 processing_duration_ms = 12;
  string processing_error = 13;
  int64 total_items = 14;
  int64 processed_items = 15;
  int64 total_chunks = 16;
  int64 vectorized_chunks = 17;
  int64 total_tokens = 18;
  double total_cost_usd = 19;
  double processing_progress = 20;
  double vectorization_progress = 21;
  bool is_processed = 22;
  google.protobuf.Timestamp created_at = 23;
  google.protobuf.Timestamp updated_at = 24;
}

message Patcheddocumentarchiverequest {

  optional string title = 1;
  optional string description = 2;
  optional bool is_public = 3;
}

message Paginatedarchiveitemlist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

enum ContentTypes {
  CONTENTTYPES_DOCUMENT = 0;
  CONTENTTYPES_CODE = 1;
  CONTENTTYPES_IMAGE = 2;
  CONTENTTYPES_DATA = 3;
  CONTENTTYPES_ARCHIVE = 4;
  CONTENTTYPES_UNKNOWN = 5;
}

enum ChunkTypes {
  CHUNKTYPES_UNKNOWN = 0;
  CHUNKTYPES_TEXT = 1;
  CHUNKTYPES_CODE = 2;
  CHUNKTYPES_HEADING = 3;
  CHUNKTYPES_METADATA = 4;
  CHUNKTYPES_TABLE = 5;
  CHUNKTYPES_LIST = 6;
}

message Archivesearchrequestrequest {

  string query = 1;
  repeated ContentTypes content_types = 2;
  repeated string languages = 3;
  repeated ChunkTypes chunk_types = 4;
  repeated string archive_ids = 5;
  optional int64 limit = 6;
  optional double similarity_threshold = 7;
}

message Paginatedarchivesearchresultlist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Chunk {
}

message ContextSummary {
}

message ArchiveInfo {
}

message ItemInfo {
}

message Archivesearchresult {

  message Chunk {
  }

  message ContextSummary {
  }

  message ArchiveInfo {
  }

  message ItemInfo {
  }

  Chunk chunk = 1;
  double similarity_score = 2;
  ContextSummary context_summary = 3;
  ArchiveInfo archive_info = 4;
  ItemInfo item_info = 5;
}

message Archiveitemchunk {

    enum ChunkType {
      CHUNKTYPE_UNKNOWN = 0;
      CHUNKTYPE_TEXT = 1;
      CHUNKTYPE_CODE = 2;
      CHUNKTYPE_HEADING = 3;
      CHUNKTYPE_METADATA = 4;
      CHUNKTYPE_TABLE = 5;
      CHUNKTYPE_LIST = 6;
    }

  string id = 1;
  string content = 2;
  int64 chunk_index = 3;
  optional ChunkType chunk_type = 4;
  int64 token_count = 5;
  int64 character_count = 6;
  string embedding_model = 7;
  double embedding_cost = 8;
  ContextSummary context_summary = 9;
  google.protobuf.Timestamp created_at = 10;
}

message Chunkrevectorizationrequestrequest {

  repeated string chunk_ids = 1;
  optional bool force = 2;
}

message Vectorizationresult {

  int64 vectorized_count = 1;
  int64 failed_count = 2;
  int64 total_tokens = 3;
  double total_cost = 4;
  double success_rate = 5;
  repeated string errors = 6;
}

message Archivestatistics {

  int64 total_archives = 1;
  int64 processed_archives = 2;
  int64 failed_archives = 3;
  int64 total_items = 4;
  int64 total_chunks = 5;
  int64 total_tokens = 6;
  double total_cost = 7;
  double avg_processing_time = 8;
  double avg_items_per_archive = 9;
  double avg_chunks_per_archive = 10;
}

message Vectorizationstatistics {

  int64 total_chunks = 1;
  int64 vectorized_chunks = 2;
  int64 pending_chunks = 3;
  double vectorization_rate = 4;
  int64 total_tokens = 5;
  double total_cost = 6;
  double avg_tokens_per_chunk = 7;
  double avg_cost_per_chunk = 8;
}

message Paginatedarchiveitemchunklist {

  int64 count = 1;
  int64 page = 2;
  int64 pages = 3;
  int64 page_size = 4;
  bool has_next = 5;
  bool has_previous = 6;
  optional int64 next_page = 7;
  optional int64 previous_page = 8;
  repeated Resultsitem results = 9;
}

message Archiveitemchunkrequest {

    enum ChunkType {
      CHUNKTYPE_UNKNOWN = 0;
      CHUNKTYPE_TEXT = 1;
      CHUNKTYPE_CODE = 2;
      CHUNKTYPE_HEADING = 3;
      CHUNKTYPE_METADATA = 4;
      CHUNKTYPE_TABLE = 5;
      CHUNKTYPE_LIST = 6;
    }

  string content = 1;
  int64 chunk_index = 2;
  optional ChunkType chunk_type = 3;
}

message Archiveitemchunkdetail {

    enum ChunkType {
      CHUNKTYPE_UNKNOWN = 0;
      CHUNKTYPE_TEXT = 1;
      CHUNKTYPE_CODE = 2;
      CHUNKTYPE_HEADING = 3;
      CHUNKTYPE_METADATA = 4;
      CHUNKTYPE_TABLE = 5;
      CHUNKTYPE_LIST = 6;
    }

  string id = 1;
  string content = 2;
  int64 chunk_index = 3;
  optional ChunkType chunk_type = 4;
  int64 token_count = 5;
  int64 character_count = 6;
  string embedding_model = 7;
  double embedding_cost = 8;
  ContextSummary context_summary = 9;
  google.protobuf.Timestamp created_at = 10;
  string context_metadata = 11;
}

message Patchedarchiveitemchunkrequest {

    enum ChunkType {
      CHUNKTYPE_UNKNOWN = 0;
      CHUNKTYPE_TEXT = 1;
      CHUNKTYPE_CODE = 2;
      CHUNKTYPE_HEADING = 3;
      CHUNKTYPE_METADATA = 4;
      CHUNKTYPE_TABLE = 5;
      CHUNKTYPE_LIST = 6;
    }

  optional string content = 1;
  optional int64 chunk_index = 2;
  optional ChunkType chunk_type = 3;
}

message Archiveitemrequest {

  string relative_path = 1;
  string item_name = 2;
  string item_type = 3;
  optional int64 file_size = 4;
}

message Archiveitemdetail {

    enum ContentType {
      CONTENTTYPE_DOCUMENT = 0;
      CONTENTTYPE_CODE = 1;
      CONTENTTYPE_IMAGE = 2;
      CONTENTTYPE_DATA = 3;
      CONTENTTYPE_ARCHIVE = 4;
      CONTENTTYPE_UNKNOWN = 5;
    }

  string id = 1;
  string relative_path = 2;
  string item_name = 3;
  string item_type = 4;
  ContentType content_type = 5;
  optional int64 file_size = 6;
  bool is_processable = 7;
  string language = 8;
  string encoding = 9;
  int64 chunks_count = 10;
  int64 total_tokens = 11;
  double processing_cost = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
  string raw_content = 15;
  string metadata = 16;
}

message Patchedarchiveitemrequest {

  optional string relative_path = 1;
  optional string item_name = 2;
  optional string item_type = 3;
  optional int64 file_size = 4;
}